# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, holger krekel and pytest-dev team
# This file is distributed under the same license as the pytest package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pytest 7.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-12 11:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../../../CONTRIBUTING.rst:3
msgid "Contribution getting started"
msgstr ""

#: ../../../../CONTRIBUTING.rst:5
msgid ""
"Contributions are highly welcomed and appreciated.  Every little bit of "
"help counts, so do not hesitate!"
msgstr ""

#: ../../../../CONTRIBUTING.rst:11
msgid "Contents"
msgstr ""

#: ../../../../CONTRIBUTING.rst:16
msgid "Feature requests and feedback"
msgstr ""

#: ../../../../CONTRIBUTING.rst:18
msgid "Do you like pytest?  Share some love on Twitter or in your blog posts!"
msgstr ""

#: ../../../../CONTRIBUTING.rst:20
msgid ""
"We'd also like to hear about your propositions and suggestions.  Feel "
"free to `submit them as issues <https://github.com/pytest-"
"dev/pytest/issues>`_ and:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:23
msgid "Explain in detail how they should work."
msgstr ""

#: ../../../../CONTRIBUTING.rst:24
msgid ""
"Keep the scope as narrow as possible.  This will make it easier to "
"implement."
msgstr ""

#: ../../../../CONTRIBUTING.rst:30
msgid "Report bugs"
msgstr ""

#: ../../../../CONTRIBUTING.rst:32
msgid ""
"Report bugs for pytest in the `issue tracker <https://github.com/pytest-"
"dev/pytest/issues>`_."
msgstr ""

#: ../../../../CONTRIBUTING.rst:34
msgid "If you are reporting a bug, please include:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:36
msgid "Your operating system name and version."
msgstr ""

#: ../../../../CONTRIBUTING.rst:37
msgid ""
"Any details about your local setup that might be helpful in "
"troubleshooting, specifically the Python interpreter version, installed "
"libraries, and pytest version."
msgstr ""

#: ../../../../CONTRIBUTING.rst:40
msgid "Detailed steps to reproduce the bug."
msgstr ""

#: ../../../../CONTRIBUTING.rst:42
msgid ""
"If you can write a demonstration test that currently fails but should "
"pass (xfail), that is a very useful commit to make as well, even if you "
"cannot fix the bug itself."
msgstr ""

#: ../../../../CONTRIBUTING.rst:50
msgid "Fix bugs"
msgstr ""

#: ../../../../CONTRIBUTING.rst:52
#, python-format
msgid ""
"Look through the `GitHub issues for bugs <https://github.com/pytest-"
"dev/pytest/labels/type:%20bug>`_. See also the `\"status: easy\" issues "
"<https://github.com/pytest-dev/pytest/labels/status%3A%20easy>`_ that are"
" friendly to new contributors."
msgstr ""

#: ../../../../CONTRIBUTING.rst:56
msgid ""
":ref:`Talk <contact>` to developers to find out how you can fix specific "
"bugs. To indicate that you are going to work on a particular issue, add a"
" comment to that effect on the specific issue."
msgstr ""

#: ../../../../CONTRIBUTING.rst:59
msgid "Don't forget to check the issue trackers of your favourite plugins, too!"
msgstr ""

#: ../../../../CONTRIBUTING.rst:64
msgid "Implement features"
msgstr ""

#: ../../../../CONTRIBUTING.rst:66
#, python-format
msgid ""
"Look through the `GitHub issues for enhancements <https://github.com"
"/pytest-dev/pytest/labels/type:%20enhancement>`_."
msgstr ""

#: ../../../../CONTRIBUTING.rst:68
msgid ""
":ref:`Talk <contact>` to developers to find out how you can implement "
"specific features."
msgstr ""

#: ../../../../CONTRIBUTING.rst:72
msgid "Write documentation"
msgstr ""

#: ../../../../CONTRIBUTING.rst:74
msgid "Pytest could always use more documentation.  What exactly is needed?"
msgstr ""

#: ../../../../CONTRIBUTING.rst:76
msgid ""
"More complementary documentation.  Have you perhaps found something "
"unclear?"
msgstr ""

#: ../../../../CONTRIBUTING.rst:77
msgid "Documentation translations.  We currently have only English."
msgstr ""

#: ../../../../CONTRIBUTING.rst:78
msgid "Docstrings.  There can never be too many of them."
msgstr ""

#: ../../../../CONTRIBUTING.rst:79
msgid "Blog posts, articles and such -- they're all very appreciated."
msgstr ""

#: ../../../../CONTRIBUTING.rst:81
msgid ""
"You can also edit documentation files directly in the GitHub web "
"interface, without using a local copy.  This can be convenient for small "
"fixes."
msgstr ""

#: ../../../../CONTRIBUTING.rst:85
msgid "Build the documentation locally with the following command:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:91
msgid ""
"The built documentation should be available in ``doc/en/_build/html``, "
"where 'en' refers to the documentation language."
msgstr ""

#: ../../../../CONTRIBUTING.rst:94
msgid ""
"Pytest has an API reference which in large part is `generated "
"automatically <https://www.sphinx-"
"doc.org/en/master/usage/extensions/autodoc.html>`_ from the docstrings of"
" the documented items. Pytest uses the `Sphinx docstring format <https"
"://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html>`_. For "
"example:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:129
msgid "Submitting Plugins to pytest-dev"
msgstr ""

#: ../../../../CONTRIBUTING.rst:131
msgid ""
"Pytest development of the core, some plugins and support code happens in "
"repositories living under the ``pytest-dev`` organisations:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:134
msgid "`pytest-dev on GitHub <https://github.com/pytest-dev>`_"
msgstr ""

#: ../../../../CONTRIBUTING.rst:136
msgid ""
"All pytest-dev Contributors team members have write access to all "
"contained repositories.  Pytest core and plugins are generally developed "
"using `pull requests`_ to respective repositories."
msgstr ""

#: ../../../../CONTRIBUTING.rst:140
msgid "The objectives of the ``pytest-dev`` organisation are:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:142
msgid "Having a central location for popular pytest plugins"
msgstr ""

#: ../../../../CONTRIBUTING.rst:143
msgid ""
"Sharing some of the maintenance responsibility (in case a maintainer no "
"longer wishes to maintain a plugin)"
msgstr ""

#: ../../../../CONTRIBUTING.rst:146
msgid ""
"You can submit your plugin by subscribing to the `pytest-dev mail list "
"<https://mail.python.org/mailman/listinfo/pytest-dev>`_ and writing a "
"mail pointing to your existing pytest plugin repository which must have "
"the following:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:151
msgid ""
"PyPI presence with packaging metadata that contains a ``pytest-`` "
"prefixed name, version number, authors, short and long description."
msgstr ""

#: ../../../../CONTRIBUTING.rst:154
msgid ""
"a  `tox configuration <https://tox.readthedocs.io/en/latest/config.html"
"#configuration-discovery>`_ for running tests using `tox "
"<https://tox.readthedocs.io>`_."
msgstr ""

#: ../../../../CONTRIBUTING.rst:157
msgid ""
"a ``README`` describing how to use the plugin and on which platforms it "
"runs."
msgstr ""

#: ../../../../CONTRIBUTING.rst:160
msgid ""
"a ``LICENSE`` file containing the licensing information, with matching "
"info in its packaging metadata."
msgstr ""

#: ../../../../CONTRIBUTING.rst:163
msgid "an issue tracker for bug reports and enhancement requests."
msgstr ""

#: ../../../../CONTRIBUTING.rst:165
msgid "a `changelog <https://keepachangelog.com/>`_."
msgstr ""

#: ../../../../CONTRIBUTING.rst:167
msgid ""
"If no contributor strongly objects and two agree, the repository can then"
" be transferred to the ``pytest-dev`` organisation."
msgstr ""

#: ../../../../CONTRIBUTING.rst:170
msgid ""
"Here's a rundown of how a repository transfer usually proceeds (using a "
"repository named ``joedoe/pytest-xyz`` as example):"
msgstr ""

#: ../../../../CONTRIBUTING.rst:173
msgid ""
"``joedoe`` transfers repository ownership to ``pytest-dev`` administrator"
" ``calvin``."
msgstr ""

#: ../../../../CONTRIBUTING.rst:174
msgid ""
"``calvin`` creates ``pytest-xyz-admin`` and ``pytest-xyz-developers`` "
"teams, inviting ``joedoe`` to both as **maintainer**."
msgstr ""

#: ../../../../CONTRIBUTING.rst:175
msgid ""
"``calvin`` transfers repository to ``pytest-dev`` and configures team "
"access:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:177
msgid "``pytest-xyz-admin`` **admin** access;"
msgstr ""

#: ../../../../CONTRIBUTING.rst:178
msgid "``pytest-xyz-developers`` **write** access;"
msgstr ""

#: ../../../../CONTRIBUTING.rst:180
msgid ""
"The ``pytest-dev/Contributors`` team has write access to all projects, "
"and every project administrator is in it. We recommend that each plugin "
"has at least three people who have the right to release to PyPI."
msgstr ""

#: ../../../../CONTRIBUTING.rst:184
msgid ""
"Repository owners can rest assured that no ``pytest-dev`` administrator "
"will ever make releases of your repository or take ownership in any way, "
"except in rare cases where someone becomes unresponsive after months of "
"contact attempts. As stated, the objective is to share maintenance and "
"avoid \"plugin-abandon\"."
msgstr ""

#: ../../../../CONTRIBUTING.rst:194
msgid "Preparing Pull Requests"
msgstr ""

#: ../../../../CONTRIBUTING.rst:197
msgid "Short version"
msgstr ""

#: ../../../../CONTRIBUTING.rst:199
msgid "Fork the repository."
msgstr ""

#: ../../../../CONTRIBUTING.rst:200
msgid ""
"Enable and install `pre-commit <https://pre-commit.com>`_ to ensure "
"style-guides and code checks are followed."
msgstr ""

#: ../../../../CONTRIBUTING.rst:201
msgid ""
"Follow **PEP-8** for naming and `black <https://github.com/psf/black>`_ "
"for formatting."
msgstr ""

#: ../../../../CONTRIBUTING.rst:202
msgid "Tests are run using ``tox``::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:206
msgid ""
"The test environments above are usually enough to cover most cases "
"locally."
msgstr ""

#: ../../../../CONTRIBUTING.rst:208
msgid ""
"Write a ``changelog`` entry: ``changelog/2574.bugfix.rst``, use issue id "
"number and one of ``feature``, ``improvement``, ``bugfix``, ``doc``, "
"``deprecation``, ``breaking``, ``vendor`` or ``trivial`` for the issue "
"type."
msgstr ""

#: ../../../../CONTRIBUTING.rst:213
msgid ""
"Unless your change is a trivial or a documentation fix (e.g., a typo or "
"reword of a small section) please add yourself to the ``AUTHORS`` file, "
"in alphabetical order."
msgstr ""

#: ../../../../CONTRIBUTING.rst:218
msgid "Long version"
msgstr ""

#: ../../../../CONTRIBUTING.rst:220
msgid ""
"What is a \"pull request\"?  It informs the project's core developers "
"about the changes you want to review and merge.  Pull requests are stored"
" on `GitHub servers <https://github.com/pytest-dev/pytest/pulls>`_. Once "
"you send a pull request, we can discuss its potential modifications and "
"even add more commits to it later on. There's an excellent tutorial on "
"how Pull Requests work in the `GitHub Help Center "
"<https://docs.github.com/en/pull-requests/collaborating-with-pull-"
"requests/proposing-changes-to-your-work-with-pull-requests/about-pull-"
"requests>`_."
msgstr ""

#: ../../../../CONTRIBUTING.rst:228
msgid "Here is a simple overview, with pytest-specific bits:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:230
msgid ""
"Fork the `pytest GitHub repository <https://github.com/pytest-"
"dev/pytest>`__.  It's fine to use ``pytest`` as your fork repository name"
" because it will live under your user."
msgstr ""

#: ../../../../CONTRIBUTING.rst:235
msgid ""
"Clone your fork locally using `git <https://git-scm.com/>`_ and create a "
"branch::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:243
msgid ""
"Given we have \"major.minor.micro\" version numbers, bug fixes will "
"usually be released in micro releases whereas features will be released "
"in minor releases and incompatible changes in major releases."
msgstr ""

#: ../../../../CONTRIBUTING.rst:247
msgid ""
"If you need some help with Git, follow this quick start guide: "
"https://git.wiki.kernel.org/index.php/QuickStart"
msgstr ""

#: ../../../../CONTRIBUTING.rst:250
msgid ""
"Install `pre-commit <https://pre-commit.com>`_ and its hook on the pytest"
" repo::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:255
msgid "Afterwards ``pre-commit`` will run whenever you commit."
msgstr ""

#: ../../../../CONTRIBUTING.rst:257
msgid ""
"https://pre-commit.com/ is a framework for managing and maintaining "
"multi-language pre-commit hooks to ensure code-style and code formatting "
"is consistent."
msgstr ""

#: ../../../../CONTRIBUTING.rst:260
msgid "Install tox"
msgstr ""

#: ../../../../CONTRIBUTING.rst:262
msgid ""
"Tox is used to run all the tests and will automatically setup virtualenvs"
" to run the tests in. (will implicitly use "
"https://virtualenv.pypa.io/en/latest/)::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:268
msgid "Run all the tests"
msgstr ""

#: ../../../../CONTRIBUTING.rst:270
msgid ""
"You need to have Python 3.7 available in your system.  Now running tests "
"is as simple as issuing this command::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:275
msgid ""
"This command will run tests via the \"tox\" tool against Python 3.7 and "
"also perform \"lint\" coding-style checks."
msgstr ""

#: ../../../../CONTRIBUTING.rst:278
msgid ""
"You can now edit your local working copy and run the tests again as "
"necessary. Please follow PEP-8 for naming."
msgstr ""

#: ../../../../CONTRIBUTING.rst:280
msgid ""
"You can pass different options to ``tox``. For example, to run tests on "
"Python 3.7 and pass options to pytest (e.g. enter pdb on failure) to "
"pytest you can do::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:285
msgid "Or to only run tests in a particular test module on Python 3.7::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:290
msgid "When committing, ``pre-commit`` will re-format the files if necessary."
msgstr ""

#: ../../../../CONTRIBUTING.rst:292
msgid ""
"If instead of using ``tox`` you prefer to run the tests directly, then we"
" suggest to create a virtual environment and use an editable install with"
" the ``testing`` extra::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:300
msgid "Afterwards, you can edit the files and run pytest normally::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:304
msgid ""
"Create a new changelog entry in ``changelog``. The file should be named "
"``<issueid>.<type>.rst``, where *issueid* is the number of the issue "
"related to the change and *type* is one of ``feature``, ``improvement``, "
"``bugfix``, ``doc``, ``deprecation``, ``breaking``, ``vendor`` or "
"``trivial``. You may skip creating the changelog entry if the change "
"doesn't affect the documented behaviour of pytest."
msgstr ""

#: ../../../../CONTRIBUTING.rst:310
msgid "Add yourself to ``AUTHORS`` file if not there yet, in alphabetical order."
msgstr ""

#: ../../../../CONTRIBUTING.rst:312
msgid ""
"Commit and push once your tests pass and you are happy with your "
"change(s)::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:317
msgid ""
"Finally, submit a pull request through the GitHub website using this "
"data::"
msgstr ""

#: ../../../../CONTRIBUTING.rst:327
msgid "Writing Tests"
msgstr ""

#: ../../../../CONTRIBUTING.rst:329
msgid ""
"Writing tests for plugins or for pytest itself is often done using the "
"`pytester fixture "
"<https://docs.pytest.org/en/stable/reference/reference.html#pytester>`_, "
"as a \"black-box\" test."
msgstr ""

#: ../../../../CONTRIBUTING.rst:331
msgid "For example, to ensure a simple test passes you can write:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:346
msgid ""
"Alternatively, it is possible to make checks based on the actual output "
"of the termal using *glob-like* expressions:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:361
msgid ""
"When choosing a file where to write a new test, take a look at the "
"existing files and see if there's one file which looks like a good fit. "
"For example, a regression test about a bug in the ``--lf`` option should "
"go into ``test_cacheprovider.py``, given that this option is implemented "
"in ``cacheprovider.py``. If in doubt, go ahead and open a PR with your "
"best guess and we can discuss this over the code."
msgstr ""

#: ../../../../CONTRIBUTING.rst:367
msgid "Joining the Development Team"
msgstr ""

#: ../../../../CONTRIBUTING.rst:369
msgid ""
"Anyone who has successfully seen through a pull request which did not "
"require any extra work from the development team to merge will themselves"
" gain commit access if they so wish (if we forget to ask please send a "
"friendly reminder).  This does not mean there is any change in your "
"contribution workflow: everyone goes through the same pull-request-and-"
"review process and no-one merges their own pull requests unless already "
"approved.  It does however mean you can participate in the development "
"process more fully since you can merge pull requests from other "
"contributors yourself after having reviewed them."
msgstr ""

#: ../../../../CONTRIBUTING.rst:381
msgid "Backporting bug fixes for the next patch release"
msgstr ""

#: ../../../../CONTRIBUTING.rst:383
msgid ""
"Pytest makes feature release every few weeks or months. In between, patch"
" releases are made to the previous feature release, containing bug fixes "
"only. The bug fixes usually fix regressions, but may be any change that "
"should reach users before the next feature release."
msgstr ""

#: ../../../../CONTRIBUTING.rst:388
msgid ""
"Suppose for example that the latest release was 1.2.3, and you want to "
"include a bug fix in 1.2.4 (check https://github.com/pytest-"
"dev/pytest/releases for the actual latest release). The procedure for "
"this is:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:392
msgid ""
"First, make sure the bug is fixed the ``main`` branch, with a regular "
"pull request, as described above. An exception to this is if the bug fix "
"is not applicable to ``main`` anymore."
msgstr ""

#: ../../../../CONTRIBUTING.rst:396
msgid "Automatic method:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:398
msgid ""
"Add a ``backport 1.2.x`` label to the PR you want to backport. This will "
"create a backport PR against the ``1.2.x`` branch."
msgstr ""

#: ../../../../CONTRIBUTING.rst:401
msgid "Manual method:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:403
msgid ""
"``git checkout origin/1.2.x -b backport-XXXX`` # use the main PR number "
"here"
msgstr ""

#: ../../../../CONTRIBUTING.rst:405
msgid "Locate the merge commit on the PR, in the *merged* message, for example:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:407
msgid "nicoddemus merged commit 0f8b462 into pytest-dev:main"
msgstr ""

#: ../../../../CONTRIBUTING.rst:409
msgid ""
"``git cherry-pick -x -m1 REVISION`` # use the revision you found above "
"(``0f8b462``)."
msgstr ""

#: ../../../../CONTRIBUTING.rst:411
msgid "Open a PR targeting ``1.2.x``:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:413
msgid "Prefix the message with ``[1.2.x]``."
msgstr ""

#: ../../../../CONTRIBUTING.rst:414
msgid "Delete the PR body, it usually contains a duplicate commit message."
msgstr ""

#: ../../../../CONTRIBUTING.rst:418
msgid "Who does the backporting"
msgstr ""

#: ../../../../CONTRIBUTING.rst:420
msgid ""
"As mentioned above, bugs should first be fixed on ``main`` (except in "
"rare occasions that a bug only happens in a previous release). So, who "
"should do the backport procedure described above?"
msgstr ""

#: ../../../../CONTRIBUTING.rst:424
msgid ""
"If the bug was fixed by a core developer, it is the main responsibility "
"of that core developer to do the backport."
msgstr ""

#: ../../../../CONTRIBUTING.rst:426
msgid ""
"However, often the merge is done by another maintainer, in which case it "
"is nice of them to do the backport procedure if they have the time."
msgstr ""

#: ../../../../CONTRIBUTING.rst:428
msgid ""
"For bugs submitted by non-maintainers, it is expected that a core "
"developer will to do the backport, normally the one that merged the PR on"
" ``main``."
msgstr ""

#: ../../../../CONTRIBUTING.rst:430
msgid ""
"If a non-maintainers notices a bug which is fixed on ``main`` but has not"
" been backported (due to maintainers forgetting to apply the *needs "
"backport* label, or just plain missing it), they are also welcome to open"
" a PR with the backport. The procedure is simple and really helps with "
"the maintenance of the project."
msgstr ""

#: ../../../../CONTRIBUTING.rst:435
msgid ""
"All the above are not rules, but merely some guidelines/suggestions on "
"what we should expect about backports."
msgstr ""

#: ../../../../CONTRIBUTING.rst:439
msgid "Handling stale issues/PRs"
msgstr ""

#: ../../../../CONTRIBUTING.rst:441
msgid ""
"Stale issues/PRs are those where pytest contributors have asked for "
"questions/changes and the authors didn't get around to answer/implement "
"them yet after a somewhat long time, or the discussion simply died "
"because people seemed to lose interest."
msgstr ""

#: ../../../../CONTRIBUTING.rst:445
msgid ""
"There are many reasons why people don't answer questions or implement "
"requested changes: they might get busy, lose interest, or just forget "
"about it, but the fact is that this is very common in open source "
"software."
msgstr ""

#: ../../../../CONTRIBUTING.rst:449
msgid ""
"The pytest team really appreciates every issue and pull request, but "
"being a high-volume project with many issues and pull requests being "
"submitted daily, we try to reduce the number of stale issues and PRs by "
"regularly closing them. When an issue/pull request is closed in this "
"manner, it is by no means a dismissal of the topic being tackled by the "
"issue/pull request, but it is just a way for us to clear up the queue and"
" make the maintainers' work more manageable. Submitters can always reopen"
" the issue/pull request in their own time later if it makes sense."
msgstr ""

#: ../../../../CONTRIBUTING.rst:457
msgid "When to close"
msgstr ""

#: ../../../../CONTRIBUTING.rst:459
msgid ""
"Here are a few general rules the maintainers use deciding when to close "
"issues/PRs because of lack of inactivity:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:462
msgid ""
"Issues labeled ``question`` or ``needs information``: closed after 14 "
"days inactive."
msgstr ""

#: ../../../../CONTRIBUTING.rst:463
msgid "Issues labeled ``proposal``: closed after six months inactive."
msgstr ""

#: ../../../../CONTRIBUTING.rst:464
msgid ""
"Pull requests: after one month, consider pinging the author, update "
"linked issue, or consider closing. For pull requests which are nearly "
"finished, the team should consider finishing it up and merging it."
msgstr ""

#: ../../../../CONTRIBUTING.rst:466
msgid ""
"The above are **not hard rules**, but merely **guidelines**, and can be "
"(and often are!) reviewed on a case-by-case basis."
msgstr ""

#: ../../../../CONTRIBUTING.rst:469
msgid "Closing pull requests"
msgstr ""

#: ../../../../CONTRIBUTING.rst:471
msgid ""
"When closing a Pull Request, it needs to be acknowledging the time, "
"effort, and interest demonstrated by the person which submitted it. As "
"mentioned previously, it is not the intent of the team to dismiss a "
"stalled pull request entirely but to merely to clear up our queue, so a "
"message like the one below is warranted when closing a pull request that "
"went stale:"
msgstr ""

#: ../../../../CONTRIBUTING.rst:473
msgid "Hi <contributor>,"
msgstr ""

#: ../../../../CONTRIBUTING.rst:475
msgid ""
"First of all, we would like to thank you for your time and effort on "
"working on this, the pytest team deeply appreciates it."
msgstr ""

#: ../../../../CONTRIBUTING.rst:477
msgid ""
"We noticed it has been awhile since you have updated this PR, however. "
"pytest is a high activity project, with many issues/PRs being opened "
"daily, so it is hard for us maintainers to track which PRs are ready for "
"merging, for review, or need more attention."
msgstr ""

#: ../../../../CONTRIBUTING.rst:479
msgid ""
"So for those reasons we, think it is best to close the PR for now, but "
"with the only intention to clean up our queue, it is by no means a "
"rejection of your changes. We still encourage you to re-open this PR (it "
"is just a click of a button away) when you are ready to get back to it."
msgstr ""

#: ../../../../CONTRIBUTING.rst:481
msgid ""
"Again we appreciate your time for working on this, and hope you might get"
" back to this at a later time!"
msgstr ""

#: ../../../../CONTRIBUTING.rst:483
msgid "<bye>"
msgstr ""

#: ../../../../CONTRIBUTING.rst:486
msgid "Closing Issues"
msgstr ""

#: ../../../../CONTRIBUTING.rst:488
msgid ""
"When a pull request is submitted to fix an issue, add text like ``closes "
"#XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue"
" number). See the `GitHub docs <https://help.github.com/en/github"
"/managing-your-work-on-github/linking-a-pull-request-to-an-"
"issue#linking-a-pull-request-to-an-issue-using-a-keyword>`_ for more "
"information."
msgstr ""

#: ../../../../CONTRIBUTING.rst:490
msgid ""
"When an issue is due to user error (e.g. misunderstanding of a "
"functionality), please politely explain to the user why the issue raised "
"is really a non-issue and ask them to close the issue if they have no "
"further questions. If the original requestor is unresponsive, the issue "
"will be handled as described in the section `Handling stale issues/PRs`_ "
"above."
msgstr ""

